name: Azure Cost Optimization Workflow Dry Run.

on:
  push:
    branches:
      - main
  workflow_dispatch:
  

jobs:
   build:
    runs-on: windows-latest
    environment: dev
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
      - name: Get registration token
        id: getRegToken
        run: |
          curl -X POST -H \"Accept: application/vnd.github.v3+json\"  -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/myprofile/myrepo/actions/runners/registration-token
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          token: ${{ secrets.GH_TOKEN }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set environment variables
        run: |
          echo "CONFIG_FILE=configs/config.yaml" >> $GITHUB_ENV
          echo "AZURE_SUBSCRIPTION_ID=38c26c07-ccce-4839-b504-cddac8e5b09d" >> $GITHUB_ENV
          echo "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "APPINSIGHTS_INSTRUMENTATIONKEY=${{ secrets.APPINSIGHTS_INSTRUMENTATIONKEY }}" >> $GITHUB_ENV
          echo "AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" >> $GITHUB_ENV
          echo "AZURE_STORAGE_FILE_SYSTEM_NAME=${{ secrets.AZURE_STORAGE_FILE_SYSTEM_NAME }}" >> $GITHUB_ENV
          echo "ADLS_DIRECTORY_PATH=${{ secrets.ADLS_DIRECTORY_PATH }}" >> $GITHUB_ENV
          echo "GH_TOKEN=$GH_TOKEN" >> $GITHUB_ENV

      - name: Verify environment variables
        run: |
          echo "CONFIG_FILE=$CONFIG_FILE"
          echo "AZURE_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID"
          echo "AZURE_CLIENT_ID=$AZURE_CLIENT_ID"
          echo "AZURE_TENANT_ID=$AZURE_TENANT_ID"
          echo "AZURE_CLIENT_SECRET=$AZURE_CLIENT_SECRET"
          echo "APPINSIGHTS_INSTRUMENTATIONKEY=$APPINSIGHTS_INSTRUMENTATIONKEY"
          echo "AZURE_STORAGE_ACCOUNT_NAME=$AZURE_STORAGE_ACCOUNT_NAME"
          echo "AZURE_STORAGE_FILE_SYSTEM_NAME=$AZURE_STORAGE_FILE_SYSTEM_NAME"
          echo "ADLS_DIRECTORY_PATH=$ADLS_DIRECTORY_PATH"
          echo "GH_TOKEN=$GH_TOKEN"
      - name: Run Azure Cost Optimizer in Dry Mode
        env:
          CONFIG_FILE: configs/config.yaml
          AZURE_SUBSCRIPTION_ID: 38c26c07-ccce-4839-b504-cddac8e5b09d
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          APPINSIGHTS_INSTRUMENTATIONKEY: ${{ secrets.APPINSIGHTS_INSTRUMENTATIONKEY }}
          AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME  }}
          AZURE_STORAGE_FILE_SYSTEM_NAME: ${{ secrets.AZURE_STORAGE_FILE_SYSTEM_NAME  }}
          ADLS_DIRECTORY_PATH: ${{ secrets.ADLS_DIRECTORY_PATH  }}
        run: |
          echo "Running Python script with mode dry-run"
          python src/main.py --mode dry-run --all-subscriptions

      - name: Configure Git
        if: ${{ success() }}
        shell: pwsh
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git config --global core.autocrlf true

      - name: Create a new branch and commit changes + Create Pull Request
        if: ${{ success() }}
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          $branchName = "azurecostoptimizer/dry-run-$((Get-Date).ToString('yyyyMMddHHmmss'))"
          git checkout -b $branchName
          git add impacted_resources.txt
          git add cost_trend_*.png
          git commit -m "Add impacted_resources.txt and cost trend charts"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/jamelachahbar/AzureCostOptimizer.git
          git push origin $branchName
          gh pr create --base main --head $branchName --title "Automated changes by Azure Cost Optimizer" --body "This PR contains automated changes by the Azure Cost Optimizer." --label "notification"

      - name: Check and Create GitHub Issue
        run: |
          if (Test-Path -Path "./impacted_resources.txt") {
            $owner = (Get-Item -Path ./impacted_resources.txt).BaseName -replace 'impacted_resources_', ''
            Write-Output "Creating issue for owner: $owner"
            $title = "Azure Cost Optimization Results for $owner"
            gh issue create --title "$title" --body-file "./impacted_resources.txt" --label "notification"
          } else {
            Write-Output "File 'impacted_resources.txt' does not exist. Skipping issue creation."
          }
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
