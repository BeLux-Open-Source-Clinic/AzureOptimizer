name: Notify Owner

on:
  repository_dispatch:
    types: [issue-created]

permissions:
  issues: write
  contents: read

jobs:
  notify-owner:
    runs-on: ubuntu-latest

    steps:
      - name: Extract and Log Event Payload
        id: extract_payload
        run: |
          echo "Event payload: ${{ toJson(github.event.client_payload) }}"
          issue_url="${{ github.event.client_payload.issue_url }}"
          echo "Issue URL: $issue_url"
          echo "::set-output name=issue_url::$issue_url"

      - name: Get Issue Details
        id: get_issue
        uses: actions/github-script@v3
        with:
          script: |
            const issue_url = '${{ steps.extract_payload.outputs.issue_url }}';
            const issue_number = issue_url.split('/').pop();
            const response = await github.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number
            });
            return response.data;
        outputs:
          issue_body: ${{ steps.get_issue.outputs.body }}

      - name: Extract issue details
        id: extract_details
        run: |
          issue_body="${{ steps.get_issue.outputs.issue_body }}"
          echo "Issue body: $issue_body"

          # Extract each JSON object and add to an array
          json_array=$(echo "$issue_body" | jq -s '[.[]]')

          # Extract values using jq from the first object in the array
          OWNER=$(echo "$json_array" | jq -r '.[0].Owner')
          POLICY=$(echo "$json_array" | jq -r '.[0].Policy')
          RESOURCE=$(echo "$json_array" | jq -r '.[0].Resource')
          ACTIONS=$(echo "$json_array" | jq -r '.[0].Actions')

          echo "Extracted OWNER: $OWNER"
          echo "Extracted POLICY: $POLICY"
          echo "Extracted RESOURCE: $RESOURCE"
          echo "Extracted ACTIONS: $ACTIONS"

          echo "::set-output name=owner::$OWNER"
          echo "::set-output name=policy::$POLICY"
          echo "::set-output name=resource::$RESOURCE"
          echo "::set-output name=actions::$ACTIONS"
        shell: bash

      - name: Comment on the issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-url: ${{ steps.extract_payload.outputs.issue_url }}
          body: |
            @${{ steps.extract_details.outputs.owner }} A new issue has been created with the following details:
            - **Policy**: ${{ steps.extract_details.outputs.policy }}
            - **Resource**: ${{ steps.extract_details.outputs.resource }}
            - **Actions**: ${{ steps.extract_details.outputs.actions }}
