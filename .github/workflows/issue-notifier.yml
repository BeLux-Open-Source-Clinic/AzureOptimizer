name: Notify Owner

on:
  repository_dispatch:
    types: [issue-created]

permissions:
  issues: write
  contents: read

jobs:
  notify-owner:
    runs-on: ubuntu-latest

    steps:
      - name: Extract and Log Event Payload
        id: extract_payload
        run: |
          echo "Event payload: ${{ toJson(github.event.client_payload) }}"
          issue_url="${{ github.event.client_payload.issue_url }}"
          issue_number=$(echo $issue_url | awk -F'/' '{print $NF}')
          echo "Issue URL: $issue_url"
          echo "Issue Number: $issue_number"
          echo "::set-output name=issue_url::$issue_url"
          echo "::set-output name=issue_number::$issue_number"

      - name: Get Issue Details
        id: get_issue
        uses: actions/github-script@v3
        with:
          script: |
            const issue_number = '${{ steps.extract_payload.outputs.issue_number }}';
            const response = await github.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number
            });
            console.log(response.data);
            return response.data.body;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Extract Owner
        id: extract_owner
        run: |
          issue_body="${{ steps.get_issue.outputs.result }}"
          echo "Issue body: $issue_body"
          OWNER=$(echo "$issue_body" | jq -r '.[0].Owner')
          echo "Extracted OWNER: $OWNER"
          echo "::set-output name=owner::$OWNER"
        shell: bash

      - name: Comment on the issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ steps.extract_payload.outputs.issue_number }}
          body: |
            @$OWNER A new issue has been created with your assigned tasks.
